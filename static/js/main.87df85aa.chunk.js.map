{"version":3,"sources":["services/api.js","assets/icon-exchange.svg","utils/constants.js","utils/helper.js","containers/App.jsx","index.js"],"names":["cancelToken","axios","require","default","CancelToken","getExchangeRate","from","to","get","c","then","res","data","conversion_rate","catch","rej","INIT_WALLETS","USD","EUR","GBP","CURRENCY","id","name","symbol","formatNumber","value","Math","round","App","useState","wallets","setWallets","walletFrom","setWalletFrom","walletTo","setWalletTo","amountFrom","setAmountFrom","amountTo","setAmountTo","rate","setRate","getRate","a","useEffect","errorFrom","useMemo","isAvailableExchange","isNaN","parseFloat","className","map","cur","onClick","type","step","onChange","e","target","src","exchangeIcon","alt","newWallets","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87df85aa.chunk.js","sourcesContent":["const axios = require(\"axios\").default;\nconst EXCHANGE_URL =\n  \"https://v6.exchangerate-api.com/v6/35f2fbd8af65b995ac7af2d1/pair\";\nconst CancelToken = axios.CancelToken;\nlet cancelToken;\nexport const getExchangeRate = (from, to) => {\n  cancelToken && cancelToken();\n  return axios\n    .get(`${EXCHANGE_URL}/${from}/${to}`, {\n      cancelToken: new CancelToken((c) => (cancelToken = c)),\n    })\n    .then((res) => res.data.conversion_rate)\n    .catch((rej) => 0);\n};\n","export default __webpack_public_path__ + \"static/media/icon-exchange.a8a7ca84.svg\";","export const INIT_WALLETS = {\n  USD: 200,\n  EUR: 150,\n  GBP: 10,\n};\n\nexport const CURRENCY = [\n  {\n    id: \"USD\",\n    name: \"USD\",\n    symbol: \"$\",\n  },\n  {\n    id: \"EUR\",\n    name: \"EUR\",\n    symbol: \"€\",\n  },\n  {\n    id: \"GBP\",\n    name: \"GBP\",\n    symbol: \"£\",\n  },\n];\n","export const formatNumber = (value)=>{\n    return Math.round(value*1000)/1000;\n}","import { useEffect, useMemo, useState } from \"react\";\nimport exchangeIcon from \"../assets/icon-exchange.svg\";\nimport { getExchangeRate } from \"../services/api\";\nimport { CURRENCY, INIT_WALLETS } from \"../utils/constants\";\nimport { formatNumber } from \"../utils/helper\";\nimport \"./App.less\";\n\nfunction App() {\n  const [wallets, setWallets] = useState(INIT_WALLETS);\n  const [walletFrom, setWalletFrom] = useState();\n  const [walletTo, setWalletTo] = useState();\n  const [amountFrom, setAmountFrom] = useState(0);\n  const [amountTo, setAmountTo] = useState(0);\n  const [rate, setRate] = useState(1);\n\n  const exchange = () => {\n    const newWallets = {\n      ...wallets,\n      [walletFrom.id]: formatNumber(wallets[walletFrom.id] - amountFrom),\n      [walletTo.id]: formatNumber(wallets[walletTo.id] + amountTo),\n    };\n    setWallets(newWallets);\n    setAmountFrom(0);\n    setAmountTo(0);\n  };\n\n  const getRate = async (from, to) => {\n    setRate(\" --- \");\n    if (from === to) {\n      setRate(1);\n      setAmountTo(formatNumber(amountFrom));\n    }\n    const rate = await getExchangeRate(from, to);\n    if (rate) {\n      setRate(rate);\n      setAmountTo(formatNumber(rate * amountFrom));\n    }\n  };\n\n  useEffect(() => {\n    if (walletFrom && walletTo) getRate(walletFrom.id, walletTo.id);\n  }, [walletFrom, walletTo]);\n\n  const onChangeAmountFrom = (e) => {\n    let value = e.target.value;\n    if (value < 0) value = \"\";\n    setAmountFrom(value);\n    setAmountTo(formatNumber(rate * value));\n  };\n\n  const onChangeAmountTo = (e) => {\n    let value = e.target.value;\n    if (value < 0) value = 0;\n    setAmountTo(value);\n    setAmountFrom(formatNumber(value / rate));\n  };\n\n  const errorFrom = useMemo(() => {\n    if (!walletFrom) return false;\n    const balance = wallets[walletFrom.id];\n    if (balance < amountFrom) return \"Exceeds balance\";\n  }, [wallets, amountFrom, walletFrom]);\n\n  const isAvailableExchange = useMemo(() => {\n    return (\n      amountFrom && amountTo && walletFrom?.id !== walletTo?.id && !errorFrom && !isNaN(parseFloat(rate))\n    );\n  }, [amountFrom, amountTo, errorFrom, walletFrom, walletTo, rate]);\n\n  return (\n    <div className=\"w-full h-screen flex justify-center items-center bg-gray-800\">\n      <div className=\"space-y-6 text-center\">\n        <h1 className=\"text-2xl text-gray-200 font-semibold\">\n          Currency Exchange\n        </h1>\n        <div className=\"bg-white p-6 rounded-lg space-y-6 w-full md:w-96\">\n          <div className=\"flex justify-between\">\n            {CURRENCY.map((cur) => (\n              <button\n                key={cur.name}\n                className={\n                  \"px-8 py-1 rounded text-white uppercase border border-indigo-500 \" +\n                  (walletFrom && walletFrom.id === cur.id\n                    ? \"bg-indigo-500\"\n                    : \"text-indigo-500\")\n                }\n                onClick={() => setWalletFrom(cur)}\n              >\n                {cur.name}\n              </button>\n            ))}\n          </div>\n          {walletFrom ? (\n            <div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">\n                  Balance: {walletFrom.symbol}\n                  {wallets[walletFrom.id]}\n                </span>\n                <span className=\"text-gray-600\">\n                  -\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={amountFrom}\n                    onChange={onChangeAmountFrom}\n                    className={\n                      \"ml-2 w-28 h-10 border px-4 py-2 rounded-md outline-none \" +\n                      (errorFrom\n                        ? \"border-red-400\"\n                        : \"border-gray-400 focus:border-indigo-500 \")\n                    }\n                  ></input>\n                </span>\n              </div>\n              {errorFrom && (\n                <p className=\"text-red-400 text-right text-xs mt-2\">\n                  {errorFrom}\n                </p>\n              )}\n            </div>\n          ) : (\n            <p className=\"text-gray-500 text-sm\">\n              Select your currency to exchange\n            </p>\n          )}\n        </div>\n        <div className=\"flex justify-center items-center text-white\">\n          <img className=\"h-6 w-6 mr-4\" src={exchangeIcon} alt=\"Exchange\" />\n          {walletFrom && walletTo && (\n            <span className=\"px-5 py-1 border rounded-xl border-white text-sm\">\n              {walletFrom?.symbol}1 = {walletTo?.symbol}\n              {rate}\n            </span>\n          )}\n        </div>\n        <div className=\"bg-white p-6 rounded-lg space-y-6 w-full md:w-96\">\n          <div className=\" flex justify-between\">\n            {CURRENCY.map((cur) => (\n              <button\n                key={cur.name}\n                className={\n                  \"px-8 py-1 rounded text-white uppercase border border-indigo-500 \" +\n                  (walletTo && walletTo.id === cur.id\n                    ? \"bg-indigo-500\"\n                    : \"text-indigo-500\")\n                }\n                onClick={() => setWalletTo(cur)}\n              >\n                {cur.name}\n              </button>\n            ))}\n          </div>\n          {walletTo ? (\n            <div className=\"flex justify-between items-center\">\n              <span className=\"font-medium\">\n                Balance: {walletTo.symbol}\n                {wallets[walletTo.id]}\n              </span>\n              <span className=\"text-gray-600\">\n                +\n                <input\n                  type=\"number\"\n                  step=\"0.1\"\n                  onChange={onChangeAmountTo}\n                  value={amountTo}\n                  className=\"ml-2 w-28 h-10 border border-gray-400 focus:border-indigo-500 px-4 py-2 rounded-md outline-none\"\n                ></input>\n              </span>\n            </div>\n          ) : (\n            <p className=\"text-gray-500 text-sm\">\n              Select your currency to exchange\n            </p>\n          )}\n        </div>\n        <button\n          onClick={exchange}\n          className={\n            \"w-full px-4 py-3 text-white font-semibold rounded-lg uppercase \" +\n            (isAvailableExchange\n              ? \"bg-green-500\"\n              : \"bg-gray-400 cursor-not-allowed\")\n          }\n          disabled={!isAvailableExchange}\n        >\n          Exchange\n        </button>\n      </div>\n      <p className=\"fixed bottom-0 pb-4 text-gray-500 text-sm\">Created by Duc Thai - 6.Nov.2021</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}